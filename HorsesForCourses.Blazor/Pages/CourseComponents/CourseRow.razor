@using HorsesForCourses.Blazor.Dtos

@if (Course != null)
{
    <tr class="course-row" @onclick="ToggleDetails" style="cursor: pointer;">
        <td>
            <div style="display: flex; align-items: center;">
                <span class="me-2">@(ShowDetails ? "▼" : "▶")</span>
                @Course.Title
            </div>
        </td>
        <td>@Course.StartDate.ToShortDateString()</td>
        <td>@Course.EndDate.ToShortDateString()</td>
        <td>@(Course.Coach?.Name ?? "N/A")</td>
        <td>
            <span class="@(Course.IsConfirmed ? "badge bg-success" : "badge bg-warning")">
                @(Course.IsConfirmed ? "Confirmed" : "Pending")
            </span>
        </td>
        <td @onclick:stopPropagation="true">
            <div style="display: flex; gap: 0.5rem;">  
                @if (!Course.IsConfirmed)
                {
                    <button class="btn btn-sm btn-info" @onclick="() => OnEdit.InvokeAsync(Course.Id)">Edit</button>
                    <button class="btn btn-sm btn-success" @onclick="() => OnConfirm.InvokeAsync(Course.Id)">Confirm</button>
                }
                else
                {
                    <button class="btn btn-sm @(Course.Coach == null ? "btn-warning" : "btn-secondary")" @onclick="() => OnAssignCoach.InvokeAsync(Course.Id)">
                        @(Course.Coach == null ? "Assign Coach" : "Change Coach")
                    </button>
                }
                <button class="btn btn-sm btn-danger" @onclick="() => OnShowDeleteConfirm.InvokeAsync(Course.Id)">Delete</button>
            </div>
        </td>
    </tr>
}

