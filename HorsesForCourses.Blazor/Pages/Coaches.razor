@page "/coaches"
@using HorsesForCourses.Blazor.Pages.CoachComponents

<PageTitle>Coaches</PageTitle>

<h1>Coaches</h1>

<button class="btn btn-primary mb-3" @onclick="ShowAddCoachModal">Add Coach</button>

@if (error != null)
{
    <p class="text-danger">@error</p>
}
else if (coaches == null)
{
    <p><em>Loading...</em></p>
    @* <p> - paragraph *@
    @* <em> - emphasis -> change style to (default) italics (наклон) *@
}
else
{
    <table class="table table-hover">

        <thead>                      @* `thead` - table head for columns headers *@
            <tr>                        @* table row *@
                <th>Name</th>               @* table header *@
                <th>Email</th>              @* table header *@
                <th>Courses Assigned</th>   @* table header *@
                <th>Actions</th>            @* table header *@
            </tr>
        </thead>


        <tbody>
            @* This loop iterates through the collection of coaches to display them in the table *@
            @foreach (var coach in coaches)
            {
                @* For each coach, the `CoachRow` component is rendered, which represents a single row in the table *@
                <CoachRow Coach="coach" 
                          OnToggleDetails="() => ToggleCoachDetails(coach.Id)"
                          OnEdit="() => ShowEditCoachModal(coach.Id)"
                          OnDelete="() => ShowDeleteConfirmModal(coach.Id)" />
                        @* 1. OnToggleDetails: An event callback that triggers the ToggleCoachDetails method in this parent component *@
                        @* 2. OnEdit: Triggers the ShowEditCoachModal method to open the edit dialog *@
                        @* 3. OnDelete: Triggers the ShowDeleteConfirmModal method to open the delete confirmation dialog *@

                @* This condition checks if the details for the current coach should be expanded *@
                @if (expandedCoachIds.Contains(coach.Id))
                {
                    @* If the details are expanded, a new table row is rendered below the coach's main row *@
                    <tr>
                        @* <td> - Table Data -> This cell spans all columns of the table to hold the details view *@
                        <td colspan="4" style="background-color: #f8f9fa;">
                            @* The `CoachDetails` component is rendered here, passing the cached details *@
                            @* `GetValueOrDefault` is used to safely get the details, returning null if not found, which the `CoachDetails` component handles *@
                            <CoachDetails Details="coachDetailsCache.GetValueOrDefault(coach.Id)" />
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@if (showAddCoachModal)
{
    <AddCoachForm OnValidSubmit="HandleCoachAdded" OnClose="HideAddCoachModal" />
}

@if (showEditCoachModal && editingCoach != null)
{
    <EditCoachForm EditingCoach="editingCoach"
                   OnCoachUpdated="HandleCoachUpdated"
                   OnCancel="HideEditCoachModal" />
}

@if (showConfirmDeleteModal)
{
    <ConfirmDialog Title="Delete Coach"
                   Message=@($"Are you sure you want to delete this coach?")
                   OnConfirm="HandleDeleteConfirmed"
                   OnCancel="HideDeleteConfirmModal" />
}
