// <auto-generated />
using System;
using HorsesForCourses.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HorsesForCourses.WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250808135157_InitialCreatу")]
    partial class InitialCreatу
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("HorsesForCourses.Core.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("HorsesForCourses.Core.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CoachId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("_requiredSkills")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("HorsesForCourses.Core.Course", b =>
                {
                    b.HasOne("HorsesForCourses.Core.Coach", "AssignedCoach")
                        .WithMany("AssignedCourses")
                        .HasForeignKey("CoachId");

                    b.OwnsOne("HorsesForCourses.Core.Period", "Period", b1 =>
                        {
                            b1.Property<int>("CourseId")
                                .HasColumnType("INTEGER");

                            b1.Property<DateOnly>("EndDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("PeriodEnd");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("PeriodStart");

                            b1.HasKey("CourseId");

                            b1.ToTable("Courses");

                            b1.WithOwner()
                                .HasForeignKey("CourseId");
                        });

                    b.OwnsMany("HorsesForCourses.Core.TimeSlot", "Schedule", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("CourseId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Day")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Day");

                            b1.Property<int>("End")
                                .HasColumnType("INTEGER")
                                .HasColumnName("End");

                            b1.Property<int>("Start")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Start");

                            b1.HasKey("Id");

                            b1.HasIndex("CourseId");

                            b1.ToTable("TimeSlot");

                            b1.WithOwner()
                                .HasForeignKey("CourseId");
                        });

                    b.Navigation("AssignedCoach");

                    b.Navigation("Period")
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("HorsesForCourses.Core.Coach", b =>
                {
                    b.Navigation("AssignedCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
